{
  "contractName": "Casino",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "LIMIT_AMOUNT_BETS",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numberOfBets",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numberWinner",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minimumBet",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxAmountOfBets",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "players",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalBet",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_minimumBet",
          "type": "uint256"
        },
        {
          "name": "_maxAmountOfBets",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "player",
          "type": "address"
        }
      ],
      "name": "checkPlayerExists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "numberToBet",
          "type": "uint256"
        }
      ],
      "name": "bet",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "generateNumberWinner",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_queryId",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "distributePrizes",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630a50e361146100ca5780631900874b146100d457806327dc297e146100ff5780632ca8c6d31461017657806338bbfa50146101a15780634081d9161461025e5780637365870b146102b95780637ce52eb6146102d95780639a6a68e9146102f0578063c38a8afd1461031b578063e08a96cd14610346578063f71d96cb14610371578063fe5e1853146103de575b600080fd5b6100d2610409565b005b3480156100e057600080fd5b506100e961043e565b6040518082815260200191505060405180910390f35b34801561010b57600080fd5b506101746004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610443565b005b34801561018257600080fd5b5061018b610486565b6040518082815260200191505060405180910390f35b3480156101ad57600080fd5b5061025c6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061048c565b005b34801561026a57600080fd5b5061029f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610789565b604051808215151515815260200191505060405180910390f35b6102d7600480360381019080803590602001909291905050506107e5565b005b3480156102e557600080fd5b506102ee610929565b005b3480156102fc57600080fd5b50610305610a7b565b6040518082815260200191505060405180910390f35b34801561032757600080fd5b50610330610a81565b6040518082815260200191505060405180910390f35b34801561035257600080fd5b5061035b610a87565b6040518082815260200191505060405180910390f35b34801561037d57600080fd5b5061039c60048036038101908080359060200190929190505050610a8d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103ea57600080fd5b506103f3610acb565b6040518082815260200191505060405180910390f35b60008060008060095460085410151561043857600793506000925062030d409150610435838584610ad1565b90505b50505050565b606481565b610482828260006040519080825280601f01601f19166020018201604052801561047c5781602001602082028038833980820191505090505b5061048c565b5050565b60085481565b82828260007f4c000000000000000000000000000000000000000000000000000000000000008260008151811015156104c157fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415806105d657507f500000000000000000000000000000000000000000000000000000000000000082600181518110151561056657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b8061067f575060017f01000000000000000000000000000000000000000000000000000000000000000282600281518110151561060f57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b1561068957600080fd5b61069c828585610697611094565b611136565b90506000151581151514156106b057600080fd5b600954600854101515610780576106c5611926565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106fb57fe5b6001600a876040518082805190602001908083835b6020831015156107355780518252602082019150602081019050602083039250610710565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206001900481151561076f57fe5b0601600a8190555061077f610929565b5b50505050505050565b600080600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156107db57600190506107e0565b600090505b919050565b6009546008541015156107f457fe5b6000151561080133610789565b151514151561080c57fe5b6001811015801561081e5750600a8111155b151561082657fe5b600654341015151561083457fe5b80600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600c60008281526020019081526020016000203390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060016008600082825401925050819055503460076000828254019250508190555060095460085410151561092657610925610409565b5b50565b6000806000600954600854101515610a7657600c6000600a5481526020019081526020016000208054905060075481151561096057fe5b049250600091505b600c6000600a54815260200190815260200160002080549050821015610a2857600c6000600a548152602001908152602001600020828154811015156109aa57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050158015610a1a573d6000803e3d6000fd5b508180600101925050610968565b600190505b600a81111515610a65576000600c600083815260200190815260200160002081610a579190613c86565b508080600101915050610a2d565b600060078190555060006008819055505b505050565b600a5481565b60065481565b60095481565b600b81815481101515610a9c57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b600060608060606000606080610ae5613cb2565b6000606060008c1480610af8575060208c115b15610b0257600080fd5b600a8d029c5060016040519080825280601f01601f191660200182016040528015610b3c5781602001602082028038833980820191505090505b5098508b7f010000000000000000000000000000000000000000000000000000000000000002896000815181101515610b7157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060206040519080825280601f01601f191660200182016040528015610bd55781602001602082028038833980820191505090505b50975060206040519080825280601f01601f191660200182016040528015610c0c5781602001602082028038833980820191505090505b509650610c17611c84565b95506020885242411860014303401860208901526020875285602088015260206040519080825280601f01601f191660200182016040528015610c695781602001602082028038833980820191505090505b5094508c602086015260086040519080825280601f01601f191660200182016040528015610ca65781602001602082028038833980820191505090505b509350610cb98560186008876000611fe2565b506080604051908101604052808981526020018a8152602001888152602001868152509250610d1e6040805190810160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250848d612040565b915060086040519080825280601f01601f191660200182016040528015610d545781602001602082028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a0100000000000000000000000000000000000000000000000000008104602283015379010000000000000000000000000000000000000000000000000081046021830153780100000000000000000000000000000000000000000000000081046020830153506110818282856001600481101515610e9557fe5b60200201516002876000600481101515610eab57fe5b60200201516040518082805190602001908083835b602083101515610ee55780518252602082019150602081019050602083039250610ec0565b6001836020036101000a0380198251168184511680821785525050505050509050019150506020604051808303816000865af1158015610f29573d6000803e3d6000fd5b5050506040513d6020811015610f3e57600080fd5b8101908080519060200190929190505050876002600481101515610f5e57fe5b60200201516040518085805190602001908083835b602083101515610f985780518252602082019150602081019050602083039250610f73565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b602083101515610feb5780518252602082019150602081019050602083039250610fc6565b6001836020036101000a038019825116818451168082178552505050505050905001836000191660001916815260200182805190602001908083835b60208310151561104c5780518252602082019150602081019050602083039250611027565b6001836020036101000a03801982511681845116808217855250505050505090500194505050505060405180910390206123e8565b8199505050505050505050509392505050565b606060028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561112c5780601f106111015761010080835404028352916020019161112c565b820191906000526020600020905b81548152906001019060200180831161110f57829003601f168201915b5050505050905090565b6000806060806060806000806060602060028e604581518110151561115757fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f010000000000000000000000000000000000000000000000000000000000000090040160440101975060206040519080825280601f01601f1916602001820160405280156112005781602001602082028038833980820191505090505b5096506112128d8960208a6000611fe2565b5060028a8d6040518083805190602001908083835b60208310151561124c5780518252602082019150602081019050602083039250611227565b6001836020036101000a0380198251168184511680821785525050505050509050018260001916600019168152602001925050506020604051808303816000865af115801561129f573d6000803e3d6000fd5b5050506040513d60208110156112b457600080fd5b8101908080519060200190929190505050604051808260001916600019168152602001915050604051809103902060001916876040518082805190602001908083835b60208310151561131c57805182526020820191506020810190506020830392506112f7565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191614151561135d5760009850611916565b60028d600160498b010181518110151561137357fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f01000000000000000000000000000000000000000000000000000000000000009004016040519080825280601f01601f1916602001820160405280156114145781602001602082028038833980820191505090505b5095506114298d60498a018851896000611fe2565b506115576002876040518082805190602001908083835b6020831015156114655780518252602082019150602081019050602083039250611440565b6001836020036101000a0380198251168184511680821785525050505050509050019150506020604051808303816000865af11580156114a9573d6000803e3d6000fd5b5050506040513d60208110156114be57600080fd5b81019080805190602001909291905050508c8f600860208d01018151811015156114e457fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f01000000000000000000000000000000000000000000000000000000000000009004612410565b15156115665760009850611916565b60296040519080825280601f01601f19166020018201604052801561159a5781602001602082028038833980820191505090505b5094506115af8d60208a016029886000611fe2565b50604080519080825280601f01601f1916602001820160405280156115e35781602001602082028038833980820191505090505b50935060418651602960208b0101010192506116078d604085036040876000611fe2565b506002846040518082805190602001908083835b602083101515611640578051825260208201915060208101905060208303925061161b565b6001836020036101000a0380198251168184511680821785525050505050509050019150506020604051808303816000865af1158015611684573d6000803e3d6000fd5b5050506040513d602081101561169957600080fd5b8101908080519060200190929190505050915084826040518083805190602001908083835b6020831015156116e357805182526020820191506020810190506020830392506116be565b6001836020036101000a038019825116818451168082178552505050505050905001826000191660001916815260200192505050604051809103902060001916600360008e600019166000191681526020019081526020016000205460001916141561176d57600360008d6000191660001916815260200190815260200160002060009055611776565b60009850611916565b60496040519080825280601f01601f1916602001820160405280156117aa5781602001602082028038833980820191505090505b5090506117bc8d896049846000611fe2565b506118696002826040518082805190602001908083835b6020831015156117f857805182526020820191506020810190506020830392506117d3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506020604051808303816000865af115801561183c573d6000803e3d6000fd5b5050506040513d602081101561185157600080fd5b81019080805190602001909291905050508786612528565b15156118785760009850611916565b6000151560046000846000191660001916815260200190815260200160002060009054906101000a900460ff16151514156118ea576118b78d84612855565b60046000846000191660001916815260200190815260200160002060006101000a81548160ff0219169083151502179055505b60046000836000191660001916815260200190815260200160002060009054906101000a900460ff1698505b5050505050505050949350505050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611996575060006119946000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612dbb565b145b156119a7576119a56000612dc6565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611a2c57600080fd5b505af1158015611a40573d6000803e3d6000fd5b505050506040513d6020811015611a5657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611bbe576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611b4257600080fd5b505af1158015611b56573d6000803e3d6000fd5b505050506040513d6020811015611b6c57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611c4457600080fd5b505af1158015611c58573d6000803e3d6000fd5b505050506040513d6020811015611c6e57600080fd5b8101908080519060200190929190505050905090565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611cf457506000611cf26000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612dbb565b145b15611d0557611d036000612dc6565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611d8a57600080fd5b505af1158015611d9e573d6000803e3d6000fd5b505050506040513d6020811015611db457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611f1c576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611ea057600080fd5b505af1158015611eb4573d6000803e3d6000fd5b505050506040513d6020811015611eca57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611fa257600080fd5b505af1158015611fb6573d6000803e3d6000fd5b505050506040513d6020811015611fcc57600080fd5b8101908080519060200190929190505050905090565b6060600080600084870192508286511015611ffc57600080fd5b8760200191508460200190505b8688602001018210156120315781890151808288015250602082019150602081019050612009565b85935050505095945050505050565b6000606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806120b3575060006120b16000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612dbb565b145b156120c4576120c26000612dc6565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561214957600080fd5b505af115801561215d573d6000803e3d6000fd5b505050506040513d602081101561217357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156122db576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561225f57600080fd5b505af1158015612273573d6000803e3d6000fd5b505050506040513d602081101561228957600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600460405190808252806020026020018201604052801561231057816020015b60608152602001906001900390816122fb5790505b50905083600060048110151561232257fe5b602002015181600081518110151561233657fe5b9060200190602002018190525083600160048110151561235257fe5b602002015181600181518110151561236657fe5b9060200190602002018190525083600260048110151561238257fe5b602002015181600281518110151561239657fe5b906020019060200201819052508360036004811015156123b257fe5b60200201518160038151811015156123c657fe5b906020019060200201819052506123de858285613257565b9150509392505050565b8060036000846000191660001916815260200190815260200160002081600019169055505050565b60008060006001915083855114151561242857600080fd5b600090505b8381101561251c57848181518110151561244357fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191686826020811015156124be57fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614151561250f57600091505b808060010191505061242d565b81925050509392505050565b600080600080600060606000606060206040519080825280601f01601f19166020018201604052801561256a5781602001602082028038833980820191505090505b50925060208a600381518110151561257e57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f010000000000000000000000000000000000000000000000000000000000000090040360040191506126018a836020866000611fe2565b925060206040519080825280601f01601f1916602001820160405280156126375781602001602082028038833980820191505090505b5090506022820191506126d28a60208c6001860381518110151561265757fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f010000000000000000000000000000000000000000000000000000000000000090040384016020846000611fe2565b905060208301519450602081015193506126ef8b601b8787613815565b80975081985050508573ffffffffffffffffffffffffffffffffffffffff16896040518082805190602001908083835b602083101515612744578051825260208201915060208101905060208303925061271f565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206001900473ffffffffffffffffffffffffffffffffffffffff16141561279a5760019750612847565b6127a78b601c8787613815565b80975081985050508573ffffffffffffffffffffffffffffffffffffffff16896040518082805190602001908083835b6020831015156127fc57805182526020820191506020810190506020830392506127d7565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206001900473ffffffffffffffffffffffffffffffffffffffff161497505b505050505050509392505050565b600080606080606080606080606060028b60018c0181518110151561287657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f01000000000000000000000000000000000000000000000000000000000000009004016040519080825280601f01601f1916602001820160405280156129175781602001602082028038833980820191505090505b5096506129298b8b89518a6000611fe2565b50604080519080825280601f01601f19166020018201604052801561295d5781602001602082028038833980820191505090505b5095506129708b60046040896000611fe2565b5060626040519080825280601f01601f1916602001820160405280156129a55781602001602082028038833980820191505090505b50945060017f0100000000000000000000000000000000000000000000000000000000000000028560008151811015156129db57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612a1d8b60418c036041886001611fe2565b506040805190810160405280602081526020017ffd94fa71bc0ba10d39d464d0d8f465efeef0a2764e3887fcc9df41ded20f505c8152509350612a668460006020886042611fe2565b50612b136002866040518082805190602001908083835b602083101515612aa25780518252602082019150602081019050602083039250612a7d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506020604051808303816000865af1158015612ae6573d6000803e3d6000fd5b5050506040513d6020811015612afb57600080fd5b81019080805190602001909291905050508888612528565b9750600015158815151415612b2b5760009850612dad565b606060405190810160405280604081526020017f7fb956469c5c9b89840d55b43537e66a98dd4811ea0a27224272c2e5622911e881526020017f537a2f8e86a46baec82864e98dd01e9ccc2f8bc5dfc9cbe5a91a290498dd96e4815250925060426040519080825280601f01601f191660200182016040528015612bbe5781602001602082028038833980820191505090505b50915060fe7f010000000000000000000000000000000000000000000000000000000000000002826000815181101515612bf457fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612c348b60036041856001611fe2565b5060028b6045815181101515612c4657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f01000000000000000000000000000000000000000000000000000000000000009004016040519080825280601f01601f191660200182016040528015612ce75781602001602082028038833980820191505090505b509050612cfa8b60448351846000611fe2565b50612da76002836040518082805190602001908083835b602083101515612d365780518252602082019150602081019050602083039250612d11565b6001836020036101000a0380198251168184511680821785525050505050509050019150506020604051808303816000865af1158015612d7a573d6000803e3d6000fd5b5050506040513d6020811015612d8f57600080fd5b81019080805190602001909291905050508285612528565b97508798505b505050505050505092915050565b6000813b9050919050565b600080612de6731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed612dbb565b1115612e8757731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612e7e6040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250613859565b60019050613252565b6000612ea673c03a2615d5efaf5f49f60b7bb6583eaec212fdf1612dbb565b1115612f475773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612f3e6040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250613859565b60019050613252565b6000612f6673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e612dbb565b11156130075773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612ffe6040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250613859565b60019050613252565b600061302673146500cfd35b22e4a392fe0adc06de1a1368ed48612dbb565b11156130c75773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506130be6040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250613859565b60019050613252565b60006130e6736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475612dbb565b111561314957736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613252565b60006131687320e12a1f859b3feae5fb2a0a32c18f5a65555bbf612dbb565b11156131cb577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613252565b60006131ea7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa612dbb565b111561324d577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613252565b600090505b919050565b600080606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806132cb575060006132c96000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612dbb565b145b156132dc576132da6000612dc6565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561336157600080fd5b505af1158015613375573d6000803e3d6000fd5b505050506040513d602081101561338b57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156134f3576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561347757600080fd5b505af115801561348b573d6000803e3d6000fd5b505050506040513d60208110156134a157600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc87866040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156135a4578082015181840152602081019050613589565b50505050905090810190601f1680156135d15780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156135f157600080fd5b505af1158015613605573d6000803e3d6000fd5b505050506040513d602081101561361b57600080fd5b81019080805190602001909291905050509150833a02670de0b6b3a76400000182111561364e576000600102925061380c565b61365785613873565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b838110156137185780820151818401526020810190506136fd565b50505050905090810190601f1680156137455780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101561377e578082015181840152602081019050613763565b50505050905090810190601f1680156137ab5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b1580156137cd57600080fd5b505af11580156137e1573d6000803e3d6000fd5b50505050506040513d60208110156137f857600080fd5b810190808051906020019092919050505092505b50509392505050565b60008060008060405188815287602082015286604082015285606082015260208160808360006001610bb8f192508051915050818193509350505094509492505050565b806002908051906020019061386f929190613cda565b5050565b606061387d613d5a565b600061388b826104006138f0565b61389482613936565b600090505b83518110156138d9576138cc84828151811015156138b357fe5b906020019060200201518361394490919063ffffffff16565b8080600101915050613899565b6138e282613969565b816000015192505050919050565b60006020828115156138fe57fe5b0614151561391b5760208181151561391257fe5b06602003810190505b80826020018181525050604051808352818101604052505050565b613941816004613977565b50565b613951826002835161399b565b6139648183613af490919063ffffffff16565b505050565b613974816007613977565b50565b613997601f60058360ff169060020a021783613ba090919063ffffffff16565b5050565b6017811115156139cc576139c78160058460ff169060020a0260ff161784613ba090919063ffffffff16565b613aef565b60ff81111515613a12576139f6601860058460ff169060020a021784613ba090919063ffffffff16565b613a0c81600185613be09092919063ffffffff16565b50613aee565b61ffff81111515613a5957613a3d601960058460ff169060020a021784613ba090919063ffffffff16565b613a5381600285613be09092919063ffffffff16565b50613aed565b63ffffffff81111515613aa257613a86601a60058460ff169060020a021784613ba090919063ffffffff16565b613a9c81600485613be09092919063ffffffff16565b50613aec565b67ffffffffffffffff81111515613aeb57613ad3601b60058460ff169060020a021784613ba090919063ffffffff16565b613ae981600885613be09092919063ffffffff16565b505b5b5b5b5b505050565b613afc613d5a565b60008060008086602001518760000151518751011115613b3257613b31876002613b2b8a602001518a51613c47565b02613c63565b5b8551915086518051602081830101955087518101825260208801945050505b602082101515613b765782518452602084019350602083019250602082039150613b51565b6001826020036101000a039050801983511681855116818117865250508694505050505092915050565b81602001516001836000015151011115613bc657613bc5826002846020015102613c63565b5b815180516020818301018381536001820183525050505050565b613be8613d5a565b6000846020015185600001515184011115613c1857613c17856002613c11886020015187613c47565b02613c63565b5b6001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b600081831115613c5957829050613c5d565b8190505b92915050565b606082600001519050613c7683836138f0565b613c808382613af4565b50505050565b815481835581811115613cad57818360005260206000209182019101613cac9190613d74565b5b505050565b6080604051908101604052806004905b6060815260200190600190039081613cc25790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613d1b57805160ff1916838001178555613d49565b82800160010185558215613d49579182015b82811115613d48578251825591602001919060010190613d2d565b5b509050613d569190613d74565b5090565b604080519081016040528060608152602001600081525090565b613d9691905b80821115613d92576000816000905550600101613d7a565b5090565b905600a165627a7a7230582045cce855ae4cb3e4e5701f2e063af97b8134d210a14945b0d69fd295ee9647c60029",
  "sourceMap": "187:5038:0:-;;;337:10;312:35;;629:2;599:32;;1643:387;8:9:-1;5:2;;;30:1;27;20:12;5:2;1643:387:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1715:10;1707:5;;:18;;;;;;;;;;;;;;;;;;1751:1;1737:11;:15;1734:44;;;1767:11;1754:10;:24;;;;1734:44;1808:1;1789:16;:20;:61;;;;;825:3;1813:16;:37;;1789:61;1786:109;;;1879:16;1861:15;:34;;;;1786:109;1989:35;10552:4:1;2007:16:0;;1989:17;;;:35;;;:::i;:::-;1643:387;;187:5038;;33063:114:1;10965:1;10959:3;;;;;;;;;;;10951:15;;;10950:49;;;;10997:1;10970:25;10990:3;;;;;;;;;;;10970:11;;;:25;;;:::i;:::-;:28;10950:49;10947:101;;;11013:35;10681:1;11013:19;;;:35;;;:::i;:::-;;10947:101;11083:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11083:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11083:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11083:16:1;;;;;;;;;;;;;;;;11062:37;;11070:8;;;;;;;;;;;11062:37;;;;11059:92;;;11134:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11134:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11134:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11134:16:1;;;;;;;;;;;;;;;;11113:8;;:38;;;;;;;;;;;;;;;;;;11059:92;33141:8;;;;;;;;;;;:21;;;33163:6;33141:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;33141:29:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;33141:29:1;;;;33063:114;:::o;33598:150::-;33660:10;33726:5;33714:18;33705:27;;33691:51;;;:::o;11309:1764::-;11372:4;11447:1;11391:55;11403:42;11391:11;;;:55;;;:::i;:::-;:57;11387:245;;;11501:42;11473:3;;:71;;;;;;;;;;;;;;;;;;11558:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;11617:4;11610:11;;;;11387:245;11701:1;11645:55;11657:42;11645:11;;;:55;;;:::i;:::-;:57;11641:254;;;11763:42;11735:3;;:71;;;;;;;;;;;;;;;;;;11820:39;;;;;;;;;;;;;;;;;;;:23;;;:39;;;:::i;:::-;11880:4;11873:11;;;;11641:254;11964:1;11908:55;11920:42;11908:11;;;:55;;;:::i;:::-;:57;11904:249;;;12024:42;11996:3;;:71;;;;;;;;;;;;;;;;;;12081:36;;;;;;;;;;;;;;;;;;;:23;;;:36;;;:::i;:::-;12138:4;12131:11;;;;11904:249;12222:1;12166:55;12178:42;12166:11;;;:55;;;:::i;:::-;:57;12162:253;;;12284:42;12256:3;;:71;;;;;;;;;;;;;;;;;;12341:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;12400:4;12393:11;;;;12162:253;12484:1;12428:55;12440:42;12428:11;;;:55;;;:::i;:::-;:57;12424:201;;;12546:42;12518:3;;:71;;;;;;;;;;;;;;;;;;12610:4;12603:11;;;;12424:201;12694:1;12638:55;12650:42;12638:11;;;:55;;;:::i;:::-;:57;12634:200;;;12755:42;12727:3;;:71;;;;;;;;;;;;;;;;;;12819:4;12812:11;;;;12634:200;12903:1;12847:55;12859:42;12847:11;;;:55;;;:::i;:::-;:57;12843:202;;;12966:42;12938:3;;:71;;;;;;;;;;;;;;;;;;13030:4;13023:11;;;;12843:202;13061:5;13054:12;;11309:1764;;;;:::o;38950:118::-;39048:13;39024:21;:37;;;;;;;;;;;;:::i;:::-;;38950:118;:::o;187:5038:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "187:5038:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3556:236;;;;;;784:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;784:44:0;;;;;;;;;;;;;;;;;;;;;;;13079:104:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13079:104:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;510:24:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;510:24:0;;;;;;;;;;;;;;;;;;;;;;;4129:361;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4129:361:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2220:157;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2220:157:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2545:805;;;;;;;;;;;;;;;;;;;;;;;;;;4654:569;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4654:569:0;;;;;;874:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;874:24:0;;;;;;;;;;;;;;;;;;;;;;;312:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;312:35:0;;;;;;;;;;;;;;;;;;;;;;;599:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;599:32:0;;;;;;;;;;;;;;;;;;;;;;;927:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;927:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;433:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;433:20:0;;;;;;;;;;;;;;;;;;;;;;;3556:236;3614:22;3648:10;3670:16;3704:15;1319;;1303:12;;:31;;1300:37;;;3639:1;3614:26;;3661:1;3648:14;;3689:6;3670:25;;3722:64;3748:5;3755:17;3774:11;3722:25;:64::i;:::-;3704:82;;1300:37;3556:236;;;;:::o;784:44::-;825:3;784:44;:::o;13079:104:1:-;13138:38;13149:4;13155:6;13173:1;13163:12;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;13163:12:1;;;;13138:10;:38::i;:::-;13079:104;;:::o;510:24:0:-;;;;:::o;4129:361::-;4250:8;4260:7;4269:6;44447:18:1;44374:16;:6;44381:1;44374:9;;;;;;;;;;;;;;;;;;;;:16;;;;;44373:38;;;;44394:16;:6;44401:1;44394:9;;;;;;;;;;;;;;;;;;;;:16;;;;;44373:38;:56;;;;44427:1;44414:14;;:6;44421:1;44414:9;;;;;;;;;;;;;;;;;;;;:14;;;;;44373:56;44369:67;;;44431:5;;;44369:67;44468:96;44504:6;44512:8;44528:7;44538:25;:23;:25::i;:::-;44468:35;:96::i;:::-;44447:117;;44595:5;44578:22;;:13;:22;;;44574:33;;;44602:5;;;44574:33;1319:15:0;;1303:12;;:31;;1300:37;;;4387:20;:18;:20::i;:::-;4373:34;;:10;:34;;;4366:42;;;;;;4456:1;4453:2;4443:7;4438:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4438:13:0;;;;;;;;;;;;;;;;4433:19;;;:22;;;;;;;;:24;4417:12;:41;;;;4466:18;:16;:18::i;:::-;1300:37;4129:361;;;;;;;:::o;2220:157::-;2271:4;2314:1;2287:16;:24;2304:6;2287:24;;;;;;;;;;;;;;;;:28;2284:87;;;2333:4;2326:11;;;;2284:87;2366:5;2359:12;;2220:157;;;;:::o;2545:805::-;2677:15;;2662:12;;:30;2655:38;;;;;;2788:5;2755:38;;:29;2773:10;2755:17;:29::i;:::-;:38;;;2748:46;;;;;;2883:1;2868:11;:16;;:37;;;;;2903:2;2888:11;:17;;2868:37;2861:45;;;;;;3006:10;;2993:9;:23;;2986:31;;;;;;3101:11;3070:16;:28;3087:10;3070:28;;;;;;;;;;;;;;;:42;;;;3176:16;:29;3193:11;3176:29;;;;;;;;;;;3211:10;3176:46;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3176:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3247:1;3231:12;;:17;;;;;;;;;;;3268:9;3256:8;;:21;;;;;;;;;;;3305:15;;3289:12;;:31;;3286:58;;;3322:22;:20;:22::i;:::-;3286:58;2545:805;:::o;4654:569::-;4700:22;4898:6;5098;1319:15;;1303:12;;:31;;1300:37;;;4736:16;:30;4753:12;;4736:30;;;;;;;;;;;:37;;;;4725:8;;:48;;;;;;;;4700:73;;4907:1;4898:10;;4894:144;4914:16;:30;4931:12;;4914:30;;;;;;;;;;;:37;;;;4910:1;:41;4894:144;;;4968:16;:30;4985:12;;4968:30;;;;;;;;;;;4999:1;4968:33;;;;;;;;;;;;;;;;;;;;;;;;;;;:42;;:61;5011:17;4968:61;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4968:61:0;4953:3;;;;;;;4894:144;;;5107:1;5098:10;;5094:79;5115:2;5110:1;:7;;5094:79;;;5163:1;5134:16;:19;5151:1;5134:19;;;;;;;;;;;:30;;;;;:::i;:::-;;5119:3;;;;;;;5094:79;;;5192:1;5181:8;:12;;;;5216:1;5201:12;:16;;;;1300:37;4654:569;;;:::o;874:24::-;;;;:::o;312:35::-;;;;:::o;599:32::-;;;;:::o;927:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;433:20::-;;;;:::o;39186:2351:1:-;39288:7;39426:19;39505;39550:27;39603:30;39955:18;40074:25;40175:20;;:::i;:::-;40247:15;40323:30;39322:1;39311:7;:12;39310:30;;;;39337:2;39327:7;:12;39310:30;39306:41;;;39342:5;;;39306:41;39414:2;39404:12;;;;39458:1;39448:12;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;39448:12:1;;;;39426:34;;39487:7;39482:13;;39470:6;39477:1;39470:9;;;;;;;;;;;;;;:25;;;;;;;;;;;39537:2;39527:13;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;39527:13:1;;;;39505:35;;39590:2;39580:13;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;39580:13:1;;;;39550:43;;39636:40;:38;:40::i;:::-;39603:73;;39724:4;39716:6;39709:20;39813:9;39803:8;39799:24;39794:1;39786:6;39782:14;39772:25;39768:56;39761:4;39753:6;39749:17;39742:83;39861:4;39845:14;39838:28;39913:22;39906:4;39890:14;39886:25;39879:57;39986:2;39976:13;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;39976:13:1;;;;39955:34;;40047:6;40040:4;40033:5;40029:16;40022:32;40112:1;40102:12;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;40102:12:1;;;;40074:40;;40124;40134:5;40141:2;40145:1;40148:12;40162:1;40124:9;:40::i;:::-;;40175:62;;;;;;;;;40199:6;40175:62;;;;40207:6;40175:62;;;;40215:14;40175:62;;;;40231:5;40175:62;;;;;40265:47;;;;;;;;;;;;;;;;;;;40290:4;40296:15;40265:14;:47::i;:::-;40247:65;;40366:1;40356:12;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;40356:12:1;;;;40323:45;;40435:4;40421:12;40417:23;40411:30;40499:65;40496:1;40492:73;40485:4;40466:17;40462:28;40454:112;40624:63;40621:1;40617:71;40610:4;40591:17;40587:28;40579:110;40747:61;40744:1;40740:69;40733:4;40714:17;40710:28;40702:108;40868:59;40865:1;40861:67;40854:4;40835:17;40831:28;40823:106;40987:57;40984:1;40980:65;40973:4;40954:17;40950:28;40942:104;41104:55;41101:1;41097:63;41090:4;41071:17;41067:28;41059:102;41219:53;41216:1;41212:61;41205:4;41186:17;41182:28;41174:100;41332:51;41329:1;41325:59;41318:4;41299:17;41295:28;41287:98;40388:1008;41406:100;41438:7;41452:17;41471:4;41476:1;41471:7;;;;;;;;;;;;;41480:15;41487:4;41492:1;41487:7;;;;;;;;;;;;;41480:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;41480:15:1;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;41480:15:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;41480:15:1;;;;;;;;;;;;;;;;41497:4;41502:1;41497:7;;;;;;;;;;;;;41447:58;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;41447:58:1;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;41447:58:1;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;41447:58:1;;;;;;;;;;;;;;;;;;;41406:31;:100::i;:::-;41523:7;41516:14;;39186:2351;;;;;;;;;;;;;;:::o;39074:106::-;39127:6;39152:21;39145:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39074:106;:::o;45452:2412::-;45580:4;45691:22;45757:20;45948:17;46573:29;46710:26;46762:15;46898:25;47269:20;45745:2;45742:1;45727:5;45733:6;45727:13;;;;;;;;;;;;;;;;;;;;45722:19;;;:21;45716:4;:28;:31;45691:56;;45790:2;45780:13;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;45780:13:1;;;;45757:36;;45803:51;45813:5;45820:17;45839:2;45843:7;45852:1;45803:9;:51::i;:::-;;45892:29;45899:12;45913:7;45892:29;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;45892:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;45892:29:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;45892:29:1;;;;;;;;;;;;;;;;45887:35;;;;;;;;;;;;;;;;;;;;;;;;45870:52;;;45875:7;45870:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;45870:13:1;;;;;;;;;;;;;;;;:52;;;;45868:55;45864:73;;;45932:5;45925:12;;;;45864:73;46023:1;45983:5;46019:1;46008:9;45989:17;:29;:31;45983:38;;;;;;;;;;;;;;;;;;;;45978:44;;;:46;45968:57;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;45968:57:1;;;;45948:77;;46035:69;46045:5;46071:9;46052:17;:29;46083:4;:11;46096:4;46102:1;46035:9;:69::i;:::-;;46255:77;46274:12;46281:4;46274:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;46274:12:1;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;46274:12:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;46274:12:1;;;;;;;;;;;;;;;;46288:6;46301:5;46328:1;46325:2;46307:17;:20;:22;46301:29;;;;;;;;;;;;;;;;;;;;46296:35;;;46255:18;:77::i;:::-;46254:78;46250:96;;;46341:5;46334:12;;;;46250:96;46615:6;46605:17;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;46605:17:1;;;;46573:49;;46632:67;46642:5;46667:2;46649:17;:20;46671:6;46679:16;46697:1;46632:9;:67::i;:::-;;46749:2;46739:13;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;46739:13:1;;;;46710:42;;46822:2;46810:4;:11;46802:6;46798:2;46780:17;:20;:29;:41;:44;46762:62;;46834:53;46844:5;46862:2;46851:10;:13;46866:2;46870:13;46885:1;46834:9;:53::i;:::-;;46926:21;46933:13;46926:21;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;46926:21:1;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;46926:21:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;46926:21:1;;;;;;;;;;;;;;;;46898:49;;47001:16;47019:17;46996:41;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;46996:41:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;46961:76;;;:22;:31;46984:7;46961:31;;;;;;;;;;;;;;;;;;:76;;;;46957:204;;;47101:22;:31;47124:7;47101:31;;;;;;;;;;;;;;;;;47094:38;;;46957:204;;;47156:5;47149:12;;;;46957:204;47302:9;47292:20;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;47292:20:1;;;;47269:43;;47322:58;47332:5;47339:17;47358:9;47369:7;47378:1;47322:9;:58::i;:::-;;47395:47;47405:15;47412:7;47405:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47405:15:1;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;47405:15:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;47405:15:1;;;;;;;;;;;;;;;;47422:4;47428:13;47395:9;:47::i;:::-;47394:48;47390:66;;;47451:5;47444:12;;;;47390:66;47618:5;47554:69;;:41;:60;47596:17;47554:60;;;;;;;;;;;;;;;;;;;;;;;;;;;:69;;;47550:230;;;47701:68;47751:5;47758:10;47701:49;:68::i;:::-;47638:41;:60;47680:17;47638:60;;;;;;;;;;;;;;;;;;:131;;;;;;;;;;;;;;;;;;47550:230;47797:41;:60;47839:17;47797:60;;;;;;;;;;;;;;;;;;;;;;;;;;;47790:67;;45452:2412;;;;;;;;;;;;;;;:::o;32946:112::-;33006:7;10965:1;10959:3;;;;;;;;;;;10951:15;;;10950:49;;;;10997:1;10970:25;10990:3;;;;;;;;;;;10970:11;:25::i;:::-;:28;10950:49;10947:101;;;11013:35;10681:1;11013:19;:35::i;:::-;;10947:101;11083:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11083:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11083:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11083:16:1;;;;;;;;;;;;;;;;11062:37;;11070:8;;;;;;;;;;;11062:37;;;;11059:92;;;11134:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11134:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11134:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11134:16:1;;;;;;;;;;;;;;;;11113:8;;:38;;;;;;;;;;;;;;;;;;11059:92;33031:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;33031:20:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;33031:20:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;33031:20:1;;;;;;;;;;;;;;;;33024:27;;32946:112;:::o;33440:152::-;33520:7;10965:1;10959:3;;;;;;;;;;;10951:15;;;10950:49;;;;10997:1;10970:25;10990:3;;;;;;;;;;;10970:11;:25::i;:::-;:28;10950:49;10947:101;;;11013:35;10681:1;11013:19;:35::i;:::-;;10947:101;11083:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11083:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11083:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11083:16:1;;;;;;;;;;;;;;;;11062:37;;11070:8;;;;;;;;;;;11062:37;;;;11059:92;;;11134:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11134:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11134:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11134:16:1;;;;;;;;;;;;;;;;11113:8;;:38;;;;;;;;;;;;;;;;;;11059:92;33545:8;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;33545:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;33545:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;33545:40:1;;;;;;;;;;;;;;;;33538:47;;33440:152;:::o;47989:690::-;48093:5;48110:14;48370:6;48404;48136:8;48127:6;:17;48110:34;;48171:9;48159:2;:9;:21;48155:116;;;48228:5;;;48155:116;48384:10;48379:2;:15;48370:24;;48418:8;48413:2;:13;48404:22;;48437:216;48467:6;48454:10;48449:2;:15;:24;48444:1;:30;48437:216;;;48544:1;48538:4;48534:12;48528:19;48583:3;48579:1;48575:2;48571:10;48564:23;48499:102;48619:2;48614:7;;;;48640:2;48635:7;;;;48437:216;;;48670:2;48663:9;;47989:690;;;;;;;;;;:::o;31031:353::-;31134:10;31156:22;10965:1;10959:3;;;;;;;;;;;10951:15;;;10950:49;;;;10997:1;10970:25;10990:3;;;;;;;;;;;10970:11;:25::i;:::-;:28;10950:49;10947:101;;;11013:35;10681:1;11013:19;:35::i;:::-;;10947:101;11083:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11083:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11083:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11083:16:1;;;;;;;;;;;;;;;;11062:37;;11070:8;;;;;;;;;;;11062:37;;;;11059:92;;;11134:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11134:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11134:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11134:16:1;;;;;;;;;;;;;;;;11113:8;;:38;;;;;;;;;;;;;;;;;;11059:92;31193:1;31181:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31156:39;;31218:4;31223:1;31218:7;;;;;;;;;;;;;31205;31213:1;31205:10;;;;;;;;;;;;;;;;;:20;;;;31248:4;31253:1;31248:7;;;;;;;;;;;;;31235;31243:1;31235:10;;;;;;;;;;;;;;;;;:20;;;;31278:4;31283:1;31278:7;;;;;;;;;;;;;31265;31273:1;31265:10;;;;;;;;;;;;;;;;;:20;;;;31308:4;31313:1;31308:7;;;;;;;;;;;;;31295;31303:1;31295:10;;;;;;;;;;;;;;;;;:20;;;;31332:45;31347:10;31359:7;31368:8;31332:14;:45::i;:::-;31325:52;;31031:353;;;;;;:::o;41543:148::-;41674:10;41640:22;:31;41663:7;41640:31;;;;;;;;;;;;;;;;;:44;;;;;;;41543:148;;:::o;45118:328::-;45216:4;45231:11;45311:9;45245:4;45231:18;;45274:14;45257:6;:13;:31;;45253:42;;;45290:5;;;45253:42;45321:1;45311:11;;45306:110;45327:14;45324:1;:17;45306:110;;;45380:6;45387:1;45380:9;;;;;;;;;;;;;;;;;;;;45366:23;;;:7;45374:1;45366:10;;;;;;;;;;;;:23;;;;;45362:43;;;45400:5;45391:14;;45362:43;45343:3;;;;;;;45306:110;;;45433:6;45426:13;;45118:328;;;;;;;:::o;41822:887::-;41904:4;41919:10;41939:14;41964:12;41986;42009:18;42053:11;42160:18;42040:2;42030:13;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;42030:13:1;;;;42009:34;;42088:4;42075:6;42082:1;42075:9;;;;;;;;;;;;;;;;;;;;42070:15;;;:22;42067:1;:26;42053:40;;42111:39;42121:6;42129;42137:2;42141:5;42148:1;42111:9;:39::i;:::-;42103:47;;42191:2;42181:13;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;42181:13:1;;;;42160:34;;42214:6;42204:16;;;;42238:71;42248:6;42289:4;42269:6;42283:1;42276:6;:8;42269:16;;;;;;;;;;;;;;;;;;;;42264:22;;;:29;42256:6;:38;42296:2;42300:5;42307:1;42238:9;:71::i;:::-;42230:79;;42368:2;42361:5;42357:14;42351:21;42343:29;;42410:2;42403:5;42399:14;42393:21;42385:29;;42453:40;42469:7;42478:2;42482:4;42488;42453:15;:40::i;:::-;42435:58;;;;;;;;42532:6;42507:31;;42520:6;42515:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;42515:12:1;;;;;;;;;;;;;;;;42507:21;;;:31;;;42503:200;;;42547:4;42540:11;;;;42503:200;42598:40;42614:7;42623:2;42627:4;42633;42598:15;:40::i;:::-;42580:58;;;;;;;;42685:6;42660:31;;42673:6;42668:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;42668:12:1;;;;;;;;;;;;;;;;42660:21;;;:31;;;42652:40;;41822:887;;;;;;;;;;;;;:::o;42715:1474::-;42822:4;42838:10;42984:17;43113:27;43221:20;43360:21;43701:22;43870:20;43991:17;43040:1;43019:5;43036:1;43025:10;:12;43019:19;;;;;;;;;;;;;;;;;;;;43014:25;;;:27;43004:38;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;43004:38:1;;;;42984:58;;43052:50;43062:5;43069:10;43081:4;:11;43094:4;43100:1;43052:9;:50::i;:::-;;43153:2;43143:13;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;43143:13:1;;;;43113:43;;43166:44;43176:5;43183:3;43188:2;43192:14;43208:1;43166:9;:44::i;:::-;;43254:7;43244:18;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;43244:18:1;;;;43221:41;;43285:1;43272:14;;:7;43280:1;43272:10;;;;;;;;;;;;;;:14;;;;;;;;;;;43303:47;43313:5;43331:2;43320:10;:13;43335:2;43339:7;43348:1;43303:9;:47::i;:::-;;43360:93;;;;;;;;;;;;;;;;;;;;43463:41;43473:8;43483:1;43486:2;43490:7;43499:4;43463:9;:41::i;:::-;;43522:48;43532:15;43539:7;43532:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;43532:15:1;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;43532:15:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;43532:15:1;;;;;;;;;;;;;;;;43549:4;43555:14;43522:9;:48::i;:::-;43514:56;;43594:5;43585:14;;:5;:14;;;43581:32;;;43608:5;43601:12;;;;43581:32;43701:158;;;;;;;;;;;;;;;;;;;;;;;;;43903:4;43893:15;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;43893:15:1;;;;43870:38;;43931:4;43918:17;;:7;43926:1;43918:10;;;;;;;;;;;;;;:17;;;;;;;;;;;43945:35;43955:5;43962:1;43965:2;43969:7;43978:1;43945:9;:35::i;:::-;;44041:1;44026:5;44032:6;44026:13;;;;;;;;;;;;;;;;;;;;44021:19;;;:21;44011:32;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;44011:32:1;;;;43991:52;;44053:44;44063:5;44070:4;44076;:11;44089:4;44095:1;44053:9;:44::i;:::-;;44116:43;44126:15;44133:7;44126:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;44126:15:1;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;44126:15:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;44126:15:1;;;;;;;;;;;;;;;;44143:4;44149:9;44116;:43::i;:::-;44108:51;;44177:5;44170:12;;42715:1474;;;;;;;;;;;;;:::o;33598:150::-;33660:10;33726:5;33714:18;33705:27;;33691:51;;;:::o;11309:1764::-;11372:4;11447:1;11391:55;11403:42;11391:11;:55::i;:::-;:57;11387:245;;;11501:42;11473:3;;:71;;;;;;;;;;;;;;;;;;11558:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;11617:4;11610:11;;;;11387:245;11701:1;11645:55;11657:42;11645:11;:55::i;:::-;:57;11641:254;;;11763:42;11735:3;;:71;;;;;;;;;;;;;;;;;;11820:39;;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;11880:4;11873:11;;;;11641:254;11964:1;11908:55;11920:42;11908:11;:55::i;:::-;:57;11904:249;;;12024:42;11996:3;;:71;;;;;;;;;;;;;;;;;;12081:36;;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;12138:4;12131:11;;;;11904:249;12222:1;12166:55;12178:42;12166:11;:55::i;:::-;:57;12162:253;;;12284:42;12256:3;;:71;;;;;;;;;;;;;;;;;;12341:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;12400:4;12393:11;;;;12162:253;12484:1;12428:55;12440:42;12428:11;:55::i;:::-;:57;12424:201;;;12546:42;12518:3;;:71;;;;;;;;;;;;;;;;;;12610:4;12603:11;;;;12424:201;12694:1;12638:55;12650:42;12638:11;:55::i;:::-;:57;12634:200;;;12755:42;12727:3;;:71;;;;;;;;;;;;;;;;;;12819:4;12812:11;;;;12634:200;12903:1;12847:55;12859:42;12847:11;:55::i;:::-;:57;12843:202;;;12966:42;12938:3;;:71;;;;;;;;;;;;;;;;;;13030:4;13023:11;;;;12843:202;13061:5;13054:12;;11309:1764;;;;:::o;25955:403::-;26057:10;26078;26229:17;10965:1;10959:3;;;;;;;;;;;10951:15;;;10950:49;;;;10997:1;10970:25;10990:3;;;;;;;;;;;10970:11;:25::i;:::-;:28;10950:49;10947:101;;;11013:35;10681:1;11013:19;:35::i;:::-;;10947:101;11083:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11083:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11083:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11083:16:1;;;;;;;;;;;;;;;;11062:37;;11070:8;;;;;;;;;;;11062:37;;;;11059:92;;;11134:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11134:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11134:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11134:16:1;;;;;;;;;;;;;;;;11113:8;;:38;;;;;;;;;;;;;;;;;;11059:92;26091:8;;;;;;;;;;;:17;;;26109:10;26121:8;26091:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;26091:39:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26091:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26091:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;26091:39:1;;;;;;;;;;;;;;;;26078:52;;26174:8;26162:11;:20;26152:7;:30;26144:5;:38;26140:52;;;26191:1;26184:8;;;;;;26140:52;26249:13;26257:4;26249:7;:13::i;:::-;26229:33;;26279:8;;;;;;;;;;;:28;;;26314:5;26321:1;26324:10;26336:4;26342:8;26279:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;26279:72:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;26279:72:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26279:72:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26279:72:1;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;26279:72:1;;;;;;;;;;;;;;;;26272:79;;11162:1;25955:403;;;;;;;:::o;48877:973::-;48965:4;48971:7;49375:8;49393:12;49457:4;49451:11;49488:4;49482;49475:18;49528:1;49523:2;49517:4;49513:13;49506:24;49565:1;49560:2;49554:4;49550:13;49543:24;49602:1;49597:2;49591:4;49587:13;49580:24;49770:2;49764:4;49759:3;49753:4;49750:1;49747;49741:4;49736:37;49729:44;;49800:4;49794:11;49786:19;;49425:390;49833:3;49838:4;49825:18;;;;48877:973;;;;;;;;;:::o;38950:118::-;39048:13;39024:21;:37;;;;;;;;;;;;:::i;:::-;;38950:118;:::o;38605:305::-;38658:5;38675:24;;:::i;:::-;38772:6;38709:22;38721:3;38726:4;38709:11;:22::i;:::-;38741:16;:3;:14;:16::i;:::-;38781:1;38772:10;;38767:86;38788:3;:10;38784:1;:14;38767:86;;;38819:23;38835:3;38839:1;38835:6;;;;;;;;;;;;;;;;;;38819:3;:15;;:23;;;;:::i;:::-;38800:3;;;;;;;38767:86;;;38862:17;:3;:15;:17::i;:::-;38896:3;:7;;;38889:14;;38605:305;;;;;:::o;3723:351::-;3815:1;3809:2;3798:8;:13;;;;;;;;:18;;3795:55;;;3847:2;3836:8;:13;;;;;;;;3830:2;:20;3818:32;;;;3795:55;3921:8;3906:3;:12;;:23;;;;;3979:4;3973:11;4009:3;4004;3997:16;4048:8;4043:3;4039:18;4033:4;4026:32;3948:120;;;:::o;9820:126::-;9890:49;9917:3;8109:1;9890:26;:49::i;:::-;9820:126;:::o;9461:165::-;9545:47;9556:3;8010:1;9579:5;:12;9545:10;:47::i;:::-;9602:17;9613:5;9602:3;:10;;:17;;;;:::i;:::-;;9461:165;;:::o;10080:134::-;10151:56;10178:3;8212:1;10151:26;:56::i;:::-;10080:134;:::o;8916:141::-;9014:36;9046:2;9041:1;9032:5;:10;;;;;;9031:17;9014:3;:10;;:36;;;;:::i;:::-;8916:141;;:::o;8220:690::-;8326:2;8317:5;:11;;8314:590;;;8344:39;8376:5;8371:1;8362:5;:10;;;;;;8361:20;;;8344:3;:10;;:39;;;;:::i;:::-;8314:590;;;8412:4;8403:5;:13;;8400:504;;;8432:36;8464:2;8459:1;8450:5;:10;;;;;;8449:17;8432:3;:10;;:36;;;;:::i;:::-;8482:23;8496:5;8503:1;8482:3;:13;;:23;;;;;:::i;:::-;;8400:504;;;8534:6;8525:5;:15;;8522:382;;;8556:36;8588:2;8583:1;8574:5;:10;;;;;;8573:17;8556:3;:10;;:36;;;;:::i;:::-;8606:23;8620:5;8627:1;8606:3;:13;;:23;;;;;:::i;:::-;;8522:382;;;8658:10;8649:5;:19;;8646:258;;;8684:36;8716:2;8711:1;8702:5;:10;;;;;;8701:17;8684:3;:10;;:36;;;;:::i;:::-;8734:23;8748:5;8755:1;8734:3;:13;;:23;;;;;:::i;:::-;;8646:258;;;8786:18;8777:5;:27;;8774:130;;;8820:36;8852:2;8847:1;8838:5;:10;;;;;;8837:17;8820:3;:10;;:36;;;;:::i;:::-;8870:23;8884:5;8891:1;8870:3;:13;;:23;;;;;:::i;:::-;;8774:130;8646:258;8522:382;8400:504;8314:590;8220:690;;;:::o;4658:1251::-;4727:6;;:::i;:::-;4882:9;4901:8;4919;5666:9;4786:3;:12;;;4769:3;:7;;;:14;4755:4;:11;:28;:43;4752:120;;;4814:47;4821:3;4859:1;4826:30;4830:3;:12;;;4844:4;:11;4826:3;:30::i;:::-;:34;4814:6;:47::i;:::-;4752:120;4930:4;:11;4919:22;;5043:3;5037:10;5126:6;5120:13;5265:2;5256:6;5248;5244:19;5240:28;5232:36;;5350:4;5344:11;5336:6;5332:24;5324:6;5317:40;5387:2;5381:4;5377:13;5370:20;;4960:440;;5460:164;5473:2;5466:3;:9;;5460:164;;;5548:3;5542:10;5536:4;5529:24;5588:2;5580:10;;;;5611:2;5604:9;;;;5484:2;5477:9;;;;5460:164;;;5698:1;5691:3;5686:2;:8;5678:3;:17;:21;5666:33;;5767:4;5763:9;5757:3;5751:10;5747:26;5819:4;5812;5806:11;5802:22;5863:7;5853:8;5850:21;5844:4;5837:35;5718:164;;5899:3;5892:10;;4658:1251;;;;;;;;:::o;6170:615::-;6265:3;:12;;;6261:1;6244:3;:7;;;:14;:18;:33;6241:92;;;6293:29;6300:3;6320:1;6305:3;:12;;;:16;6293:6;:29::i;:::-;6241:92;6435:3;6429:10;6518:6;6512:13;6655:2;6646:6;6638;6634:19;6630:28;6685:4;6679;6671:19;6766:1;6758:6;6754:14;6746:6;6739:30;6352:427;;;;;:::o;7046:759::-;7127:6;;:::i;:::-;7266:9;7178:3;:12;;;7161:3;:7;;;:14;7155:3;:20;:35;7152:104;;;7206:39;7213:3;7243:1;7218:22;7222:3;:12;;;7236:3;7218;:22::i;:::-;:26;7206:6;:39::i;:::-;7152:104;7291:1;7285:3;7278;:10;:14;7266:26;;7394:3;7388:10;7477:6;7471:13;7620:3;7611:6;7603;7599:19;7595:29;7682:4;7674;7670:9;7663:4;7657:11;7653:27;7650:37;7644:4;7637:51;7764:3;7756:6;7752:16;7744:6;7737:32;7311:468;;;7795:3;7788:10;;7046:759;;;;;;:::o;4253:133::-;4303:4;4326:1;4322;:5;4319:43;;;4350:1;4343:8;;;;4319:43;4378:1;4371:8;;4253:133;;;;;:::o;4080:167::-;4153:19;4175:3;:7;;;4153:29;;4192:19;4197:3;4202:8;4192:4;:19::i;:::-;4221;4228:3;4233:6;4221;:19::i;:::-;;4080:167;;;:::o;187:5038:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.20;\n\nimport \"./oraclizeAPI_0.4.sol\";\n\n/// @title Contract to bet Ether for a number and win randomly when the number of bets is met.\n/// @author Merunas Grincalaitis\ncontract Casino is usingOraclize {\n   address owner;\n\n   // The minimum bet a user has to make to participate in the game\n   uint public minimumBet = 100 finney; // Equal to 0.1 ether\n\n   // The total amount of Ether bet for this current game\n   uint public totalBet;\n\n   // The total number of bets the users have made\n   uint public numberOfBets;\n\n   // The maximum amount of bets can be made for each game\n   uint public maxAmountOfBets = 10;\n\n   // The max amount of bets that cannot be exceeded to avoid excessive gas consumption\n   // when distributing the prizes and restarting the game\n   uint public constant LIMIT_AMOUNT_BETS = 100;\n\n   // The number that won the last game\n   uint public numberWinner;\n\n   // Array of players\n   address[] public players;\n\n   // Each number has an array of players. Associate each number with a bunch of players\n   mapping(uint => address[]) numberBetPlayers;\n\n   // The number that each player has bet for\n   mapping(address => uint) playerBetsNumber;\n\n   // Modifier to only allow the execution of functions when the bets are completed\n   modifier onEndGame(){\n      if(numberOfBets >= maxAmountOfBets) _;\n   }\n\n   /// @notice Constructor that's used to configure the minimum bet per game and the max amount of bets\n   /// @param _minimumBet The minimum bet that each user has to make in order to participate in the game\n   /// @param _maxAmountOfBets The max amount of bets that are required for each game\n   function Casino(uint _minimumBet, uint _maxAmountOfBets){\n      owner = msg.sender;\n\n      if(_minimumBet > 0) minimumBet = _minimumBet;\n      if(_maxAmountOfBets > 0 && _maxAmountOfBets <= LIMIT_AMOUNT_BETS)\n         maxAmountOfBets = _maxAmountOfBets;\n\n      // Set the proof of oraclize in order to make secure random number generations\n      oraclize_setProof(proofType_Ledger);\n   }\n\n   /// @notice Check if a player exists in the current game\n   /// @param player The address of the player to check\n   /// @return bool Returns true is it exists or false if it doesn't\n   function checkPlayerExists(address player) returns(bool){\n      if(playerBetsNumber[player] > 0)\n         return true;\n      else\n         return false;\n   }\n\n   /// @notice To bet for a number by sending Ether\n   /// @param numberToBet The number that the player wants to bet for. Must be between 1 and 10 both inclusive\n   function bet(uint numberToBet) payable{\n\n      // Check that the max amount of bets hasn't been met yet\n      assert(numberOfBets < maxAmountOfBets);\n\n      // Check that the player doesn't exists\n      assert(checkPlayerExists(msg.sender) == false);\n\n      // Check that the number to bet is within the range\n      assert(numberToBet >= 1 && numberToBet <= 10);\n\n      // Check that the amount paid is bigger or equal the minimum bet\n      assert(msg.value >= minimumBet);\n\n      // Set the number bet for that player\n      playerBetsNumber[msg.sender] = numberToBet;\n\n      // The player msg.sender has bet for that number\n      numberBetPlayers[numberToBet].push(msg.sender);\n\n      numberOfBets += 1;\n      totalBet += msg.value;\n\n      if(numberOfBets >= maxAmountOfBets) generateNumberWinner();\n   }\n\n   /// @notice Generates a random number between 1 and 10 both inclusive.\n   /// Must be payable because oraclize needs gas to generate a random number.\n   /// Can only be executed when the game ends.\n   function generateNumberWinner() payable onEndGame {\n      uint numberRandomBytes = 7;\n      uint delay = 0;\n      uint callbackGas = 200000;\n\n      bytes32 queryId = oraclize_newRandomDSQuery(delay, numberRandomBytes, callbackGas);\n   }\n\n   /// @notice Callback function that gets called by oraclize when the random number is generated\n   /// @param _queryId The query id that was generated to proofVerify\n   /// @param _result String that contains the number generated\n   /// @param _proof A string with a proof code to verify the authenticity of the number generation\n   function __callback(\n      bytes32 _queryId,\n      string _result,\n      bytes _proof\n   ) oraclize_randomDS_proofVerify(_queryId, _result, _proof) onEndGame {\n\n      // Checks that the sender of this callback was in fact oraclize\n      assert(msg.sender == oraclize_cbAddress());\n\n      numberWinner = (uint(sha3(_result))%10+1);\n      distributePrizes();\n   }\n\n   /// @notice Sends the corresponding Ether to each winner then deletes all the\n   /// players for the next game and resets the `totalBet` and `numberOfBets`\n   function distributePrizes() onEndGame {\n      uint winnerEtherAmount = totalBet / numberBetPlayers[numberWinner].length; // How much each winner gets\n\n      // Loop through all the winners to send the corresponding prize for each one\n      for(uint i = 0; i < numberBetPlayers[numberWinner].length; i++){\n         numberBetPlayers[numberWinner][i].transfer(winnerEtherAmount);\n      }\n\n      // Delete all the players for each number\n      for(uint j = 1; j <= 10; j++){\n         numberBetPlayers[j].length = 0;\n      }\n\n      totalBet = 0;\n      numberOfBets = 0;\n   }\n}\n",
  "sourcePath": "/Users/shintaronakajima/dev/casino-ether/contracts/Casino.sol",
  "ast": {
    "absolutePath": "/Users/shintaronakajima/dev/casino-ether/contracts/Casino.sol",
    "exportedSymbols": {
      "Casino": [
        299
      ]
    },
    "id": 300,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/shintaronakajima/dev/casino-ether/contracts/oraclizeAPI_0.4.sol",
        "file": "./oraclizeAPI_0.4.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 6314,
        "src": "26:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6313,
              "src": "206:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6313",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "206:13:0"
          }
        ],
        "contractDependencies": [
          6313
        ],
        "contractKind": "contract",
        "documentation": "@title Contract to bet Ether for a number and win randomly when the number of bets is met.\n @author Merunas Grincalaitis",
        "fullyImplemented": true,
        "id": 299,
        "linearizedBaseContracts": [
          299,
          6313
        ],
        "name": "Casino",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "225:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "225:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 9,
            "name": "minimumBet",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "312:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "312:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313030",
              "id": 8,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "337:10:0",
              "subdenomination": "finney",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "name": "totalBet",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "433:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "433:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "numberOfBets",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "510:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "510:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "name": "maxAmountOfBets",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "599:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "599:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "629:2:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 19,
            "name": "LIMIT_AMOUNT_BETS",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "784:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "784:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313030",
              "id": 18,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "825:3:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 21,
            "name": "numberWinner",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "874:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "874:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24,
            "name": "players",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "927:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 22,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "927:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 23,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "927:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 29,
            "name": "numberBetPlayers",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "1046:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(uint256 => address[])"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 25,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1054:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1046:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(uint256 => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 26,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1062:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 27,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1062:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 33,
            "name": "playerBetsNumber",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "1141:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 32,
              "keyType": {
                "id": 30,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1149:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1141:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 31,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1160:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "1292:51:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 35,
                      "name": "numberOfBets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1303:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 36,
                      "name": "maxAmountOfBets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1319:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1303:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 39,
                  "nodeType": "IfStatement",
                  "src": "1300:37:0",
                  "trueBody": {
                    "id": 38,
                    "nodeType": "PlaceholderStatement",
                    "src": "1336:1:0"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 41,
            "name": "onEndGame",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1290:2:0"
            },
            "src": "1272:71:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "1699:331:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 48,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1707:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 49,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6328,
                        "src": "1715:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1715:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1707:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "1707:18:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 53,
                      "name": "_minimumBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "1737:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1751:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1737:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 60,
                  "nodeType": "IfStatement",
                  "src": "1734:44:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 58,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 56,
                        "name": "minimumBet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1754:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "id": 57,
                        "name": "_minimumBet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1767:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1754:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 59,
                    "nodeType": "ExpressionStatement",
                    "src": "1754:24:0"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 63,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 61,
                        "name": "_maxAmountOfBets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1789:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1808:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1789:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "_maxAmountOfBets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1813:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "LIMIT_AMOUNT_BETS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "1833:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1813:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1789:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 72,
                  "nodeType": "IfStatement",
                  "src": "1786:109:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 68,
                        "name": "maxAmountOfBets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1861:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "id": 69,
                        "name": "_maxAmountOfBets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1879:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1861:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 71,
                    "nodeType": "ExpressionStatement",
                    "src": "1861:34:0"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 74,
                        "name": "proofType_Ledger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 990,
                        "src": "2007:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 73,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4301,
                      "src": "1989:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1989:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "1989:35:0"
                }
              ]
            },
            "documentation": "@notice Constructor that's used to configure the minimum bet per game and the max amount of bets\n @param _minimumBet The minimum bet that each user has to make in order to participate in the game\n @param _maxAmountOfBets The max amount of bets that are required for each game",
            "id": 78,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "Casino",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "name": "_minimumBet",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1659:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1659:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "name": "_maxAmountOfBets",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1677:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1677:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1658:41:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1699:0:0"
            },
            "scope": 299,
            "src": "1643:387:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "2276:101:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "playerBetsNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "2287:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 87,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "2304:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2287:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2314:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2287:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2366:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 84,
                    "id": 93,
                    "nodeType": "Return",
                    "src": "2359:12:0"
                  },
                  "id": 94,
                  "nodeType": "IfStatement",
                  "src": "2284:87:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2333:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 84,
                    "id": 91,
                    "nodeType": "Return",
                    "src": "2326:11:0"
                  }
                }
              ]
            },
            "documentation": "@notice Check if a player exists in the current game\n @param player The address of the player to check\n @return bool Returns true is it exists or false if it doesn't",
            "id": 96,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "checkPlayerExists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "name": "player",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "2247:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2247:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2246:16:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "2271:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2271:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2270:6:0"
            },
            "scope": 299,
            "src": "2220:157:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 164,
              "nodeType": "Block",
              "src": "2583:767:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 102,
                          "name": "numberOfBets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "2662:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 103,
                          "name": "maxAmountOfBets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "2677:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2662:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 101,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6317,
                      "src": "2655:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2655:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "2655:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 109,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6328,
                                "src": "2773:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2773:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 108,
                            "name": "checkPlayerExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "2755:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) returns (bool)"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2755:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2788:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2755:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 107,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6317,
                      "src": "2748:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2748:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "2748:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 117,
                            "name": "numberToBet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "2868:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2883:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2868:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 120,
                            "name": "numberToBet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "2888:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2903:2:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "2888:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2868:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 116,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6317,
                      "src": "2861:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2861:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "2861:45:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 127,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6328,
                            "src": "2993:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2993:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 129,
                          "name": "minimumBet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "3006:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2993:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 126,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6317,
                      "src": "2986:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2986:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "2986:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "playerBetsNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "3070:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 136,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 134,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6328,
                          "src": "3087:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3087:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3070:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 137,
                      "name": "numberToBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "3101:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3070:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "3070:42:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 144,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6328,
                          "src": "3211:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3211:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 140,
                          "name": "numberBetPlayers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "3176:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(uint256 => address[] storage ref)"
                          }
                        },
                        "id": 142,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 141,
                          "name": "numberToBet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "3193:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3176:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3176:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3176:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "3176:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 148,
                      "name": "numberOfBets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "3231:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3247:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3231:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "3231:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 152,
                      "name": "totalBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "3256:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 153,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6328,
                        "src": "3268:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3268:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3256:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "3256:21:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 157,
                      "name": "numberOfBets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "3289:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 158,
                      "name": "maxAmountOfBets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "3305:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3289:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 163,
                  "nodeType": "IfStatement",
                  "src": "3286:58:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 160,
                        "name": "generateNumberWinner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "3322:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3322:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 162,
                    "nodeType": "ExpressionStatement",
                    "src": "3322:22:0"
                  }
                }
              ]
            },
            "documentation": "@notice To bet for a number by sending Ether\n @param numberToBet The number that the player wants to bet for. Must be between 1 and 10 both inclusive",
            "id": 165,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "bet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "name": "numberToBet",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "2558:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2558:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2557:18:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2583:0:0"
            },
            "scope": 299,
            "src": "2545:805:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 190,
              "nodeType": "Block",
              "src": "3606:186:0",
              "statements": [
                {
                  "assignments": [
                    171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 171,
                      "name": "numberRandomBytes",
                      "nodeType": "VariableDeclaration",
                      "scope": 191,
                      "src": "3614:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 170,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3614:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 173,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "37",
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3639:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_7_by_1",
                      "typeString": "int_const 7"
                    },
                    "value": "7"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3614:26:0"
                },
                {
                  "assignments": [
                    175
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 175,
                      "name": "delay",
                      "nodeType": "VariableDeclaration",
                      "scope": 191,
                      "src": "3648:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 174,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3648:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 177,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3661:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3648:14:0"
                },
                {
                  "assignments": [
                    179
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 179,
                      "name": "callbackGas",
                      "nodeType": "VariableDeclaration",
                      "scope": 191,
                      "src": "3670:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 178,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3670:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 181,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "323030303030",
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3689:6:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000_by_1",
                      "typeString": "int_const 200000"
                    },
                    "value": "200000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3670:25:0"
                },
                {
                  "assignments": [
                    183
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 183,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 191,
                      "src": "3704:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 182,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3704:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 189,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "delay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 175,
                        "src": "3748:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 186,
                        "name": "numberRandomBytes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "3755:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 187,
                        "name": "callbackGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "3774:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 184,
                      "name": "oraclize_newRandomDSQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5415,
                      "src": "3722:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3722:64:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3704:82:0"
                }
              ]
            },
            "documentation": "@notice Generates a random number between 1 and 10 both inclusive.\n Must be payable because oraclize needs gas to generate a random number.\n Can only be executed when the game ends.",
            "id": 191,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 168,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 167,
                  "name": "onEndGame",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 41,
                  "src": "3596:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3596:9:0"
              }
            ],
            "name": "generateNumberWinner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3585:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3606:0:0"
            },
            "scope": 299,
            "src": "3556:236:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 231,
              "nodeType": "Block",
              "src": "4287:203:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 208,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6328,
                            "src": "4373:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4373:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 210,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4288,
                            "src": "4387:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4387:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4373:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 207,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6317,
                      "src": "4366:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4366:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "4366:42:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 215,
                      "name": "numberWinner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "4417:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 218,
                                      "name": "_result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 195,
                                      "src": "4443:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "id": 217,
                                    "name": "sha3",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6338,
                                    "src": "4438:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                                      "typeString": "function () pure returns (bytes32)"
                                    }
                                  },
                                  "id": 219,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4438:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4433:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint"
                              },
                              "id": 220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4433:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4453:2:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "src": "4433:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4456:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4433:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 225,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4432:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4417:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "4417:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 228,
                      "name": "distributePrizes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "4466:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4466:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "4466:18:0"
                }
              ]
            },
            "documentation": "@notice Callback function that gets called by oraclize when the random number is generated\n @param _queryId The query id that was generated to proofVerify\n @param _result String that contains the number generated\n @param _proof A string with a proof code to verify the authenticity of the number generation",
            "id": 232,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 200,
                    "name": "_queryId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 193,
                    "src": "4250:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 201,
                    "name": "_result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 195,
                    "src": "4260:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 202,
                    "name": "_proof",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 197,
                    "src": "4269:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 203,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 199,
                  "name": "oraclize_randomDS_proofVerify",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5795,
                  "src": "4220:29:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$",
                    "typeString": "modifier (bytes32,string memory,bytes memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4220:56:0"
              },
              {
                "arguments": null,
                "id": 205,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 204,
                  "name": "onEndGame",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 41,
                  "src": "4277:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4277:9:0"
              }
            ],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 193,
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "4156:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4156:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 195,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "4180:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4180:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 197,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "4202:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4202:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4148:71:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4287:0:0"
            },
            "scope": 299,
            "src": "4129:361:0",
            "stateMutability": "nonpayable",
            "superFunction": 1233,
            "visibility": "public"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "4692:531:0",
              "statements": [
                {
                  "assignments": [
                    238
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 238,
                      "name": "winnerEtherAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 298,
                      "src": "4700:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 237,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4700:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 245,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 239,
                      "name": "totalBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "4725:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 240,
                          "name": "numberBetPlayers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "4736:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(uint256 => address[] storage ref)"
                          }
                        },
                        "id": 242,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 241,
                          "name": "numberWinner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "4753:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4736:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 243,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4736:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4725:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4700:73:0"
                },
                {
                  "body": {
                    "id": 268,
                    "nodeType": "Block",
                    "src": "4957:81:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 265,
                              "name": "winnerEtherAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 238,
                              "src": "5011:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 259,
                                  "name": "numberBetPlayers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29,
                                  "src": "4968:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                                    "typeString": "mapping(uint256 => address[] storage ref)"
                                  }
                                },
                                "id": 262,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 260,
                                  "name": "numberWinner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21,
                                  "src": "4985:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4968:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 263,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 261,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 247,
                                "src": "4999:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4968:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4968:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4968:61:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 267,
                        "nodeType": "ExpressionStatement",
                        "src": "4968:61:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 250,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "4910:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 251,
                          "name": "numberBetPlayers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "4914:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(uint256 => address[] storage ref)"
                          }
                        },
                        "id": 253,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 252,
                          "name": "numberWinner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "4931:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4914:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 254,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4914:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4910:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 269,
                  "initializationExpression": {
                    "assignments": [
                      247
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 247,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 298,
                        "src": "4898:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4898:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 249,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4907:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4898:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4953:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 256,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "4953:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 258,
                    "nodeType": "ExpressionStatement",
                    "src": "4953:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "4894:144:0"
                },
                {
                  "body": {
                    "id": 287,
                    "nodeType": "Block",
                    "src": "5123:50:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 280,
                                "name": "numberBetPlayers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29,
                                "src": "5134:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(uint256 => address[] storage ref)"
                                }
                              },
                              "id": 282,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 281,
                                "name": "j",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 271,
                                "src": "5151:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5134:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 283,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5134:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5163:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5134:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 286,
                        "nodeType": "ExpressionStatement",
                        "src": "5134:30:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 274,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "5110:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5115:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "5110:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 288,
                  "initializationExpression": {
                    "assignments": [
                      271
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 271,
                        "name": "j",
                        "nodeType": "VariableDeclaration",
                        "scope": 298,
                        "src": "5098:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 270,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5098:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 273,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5107:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5098:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5119:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 277,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 271,
                        "src": "5119:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 279,
                    "nodeType": "ExpressionStatement",
                    "src": "5119:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5094:79:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 289,
                      "name": "totalBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "5181:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5192:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5181:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "5181:12:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 293,
                      "name": "numberOfBets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "5201:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5216:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5201:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "5201:16:0"
                }
              ]
            },
            "documentation": "@notice Sends the corresponding Ether to each winner then deletes all the\n players for the next game and resets the `totalBet` and `numberOfBets`",
            "id": 298,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 235,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 234,
                  "name": "onEndGame",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 41,
                  "src": "4682:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4682:9:0"
              }
            ],
            "name": "distributePrizes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4679:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4692:0:0"
            },
            "scope": 299,
            "src": "4654:569:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 300,
        "src": "187:5038:0"
      }
    ],
    "src": "0:5226:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/shintaronakajima/dev/casino-ether/contracts/Casino.sol",
    "exportedSymbols": {
      "Casino": [
        299
      ]
    },
    "id": 300,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/shintaronakajima/dev/casino-ether/contracts/oraclizeAPI_0.4.sol",
        "file": "./oraclizeAPI_0.4.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 6314,
        "src": "26:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6313,
              "src": "206:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6313",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "206:13:0"
          }
        ],
        "contractDependencies": [
          6313
        ],
        "contractKind": "contract",
        "documentation": "@title Contract to bet Ether for a number and win randomly when the number of bets is met.\n @author Merunas Grincalaitis",
        "fullyImplemented": true,
        "id": 299,
        "linearizedBaseContracts": [
          299,
          6313
        ],
        "name": "Casino",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "225:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "225:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 9,
            "name": "minimumBet",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "312:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "312:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313030",
              "id": 8,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "337:10:0",
              "subdenomination": "finney",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "name": "totalBet",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "433:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "433:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "numberOfBets",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "510:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "510:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "name": "maxAmountOfBets",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "599:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "599:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "629:2:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 19,
            "name": "LIMIT_AMOUNT_BETS",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "784:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "784:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313030",
              "id": 18,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "825:3:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 21,
            "name": "numberWinner",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "874:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "874:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24,
            "name": "players",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "927:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 22,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "927:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 23,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "927:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 29,
            "name": "numberBetPlayers",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "1046:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(uint256 => address[])"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 25,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1054:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1046:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(uint256 => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 26,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1062:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 27,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1062:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 33,
            "name": "playerBetsNumber",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "1141:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 32,
              "keyType": {
                "id": 30,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1149:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1141:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 31,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1160:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "1292:51:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 35,
                      "name": "numberOfBets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1303:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 36,
                      "name": "maxAmountOfBets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1319:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1303:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 39,
                  "nodeType": "IfStatement",
                  "src": "1300:37:0",
                  "trueBody": {
                    "id": 38,
                    "nodeType": "PlaceholderStatement",
                    "src": "1336:1:0"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 41,
            "name": "onEndGame",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1290:2:0"
            },
            "src": "1272:71:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "1699:331:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 48,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1707:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 49,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6328,
                        "src": "1715:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1715:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1707:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "1707:18:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 53,
                      "name": "_minimumBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "1737:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1751:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1737:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 60,
                  "nodeType": "IfStatement",
                  "src": "1734:44:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 58,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 56,
                        "name": "minimumBet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1754:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "id": 57,
                        "name": "_minimumBet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1767:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1754:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 59,
                    "nodeType": "ExpressionStatement",
                    "src": "1754:24:0"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 63,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 61,
                        "name": "_maxAmountOfBets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1789:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1808:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1789:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "_maxAmountOfBets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1813:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "LIMIT_AMOUNT_BETS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "1833:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1813:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1789:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 72,
                  "nodeType": "IfStatement",
                  "src": "1786:109:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 68,
                        "name": "maxAmountOfBets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1861:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "id": 69,
                        "name": "_maxAmountOfBets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1879:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1861:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 71,
                    "nodeType": "ExpressionStatement",
                    "src": "1861:34:0"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 74,
                        "name": "proofType_Ledger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 990,
                        "src": "2007:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 73,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4301,
                      "src": "1989:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1989:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "1989:35:0"
                }
              ]
            },
            "documentation": "@notice Constructor that's used to configure the minimum bet per game and the max amount of bets\n @param _minimumBet The minimum bet that each user has to make in order to participate in the game\n @param _maxAmountOfBets The max amount of bets that are required for each game",
            "id": 78,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "Casino",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "name": "_minimumBet",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1659:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1659:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "name": "_maxAmountOfBets",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1677:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1677:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1658:41:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1699:0:0"
            },
            "scope": 299,
            "src": "1643:387:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "2276:101:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "playerBetsNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "2287:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 87,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "2304:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2287:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2314:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2287:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2366:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 84,
                    "id": 93,
                    "nodeType": "Return",
                    "src": "2359:12:0"
                  },
                  "id": 94,
                  "nodeType": "IfStatement",
                  "src": "2284:87:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2333:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 84,
                    "id": 91,
                    "nodeType": "Return",
                    "src": "2326:11:0"
                  }
                }
              ]
            },
            "documentation": "@notice Check if a player exists in the current game\n @param player The address of the player to check\n @return bool Returns true is it exists or false if it doesn't",
            "id": 96,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "checkPlayerExists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "name": "player",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "2247:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2247:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2246:16:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "2271:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2271:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2270:6:0"
            },
            "scope": 299,
            "src": "2220:157:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 164,
              "nodeType": "Block",
              "src": "2583:767:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 102,
                          "name": "numberOfBets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "2662:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 103,
                          "name": "maxAmountOfBets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "2677:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2662:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 101,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6317,
                      "src": "2655:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2655:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "2655:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 109,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6328,
                                "src": "2773:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2773:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 108,
                            "name": "checkPlayerExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "2755:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) returns (bool)"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2755:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2788:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2755:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 107,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6317,
                      "src": "2748:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2748:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "2748:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 117,
                            "name": "numberToBet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "2868:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2883:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2868:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 120,
                            "name": "numberToBet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "2888:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2903:2:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "2888:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2868:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 116,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6317,
                      "src": "2861:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2861:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "2861:45:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 127,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6328,
                            "src": "2993:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2993:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 129,
                          "name": "minimumBet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "3006:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2993:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 126,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6317,
                      "src": "2986:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2986:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "2986:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "playerBetsNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "3070:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 136,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 134,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6328,
                          "src": "3087:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3087:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3070:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 137,
                      "name": "numberToBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "3101:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3070:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "3070:42:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 144,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6328,
                          "src": "3211:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3211:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 140,
                          "name": "numberBetPlayers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "3176:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(uint256 => address[] storage ref)"
                          }
                        },
                        "id": 142,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 141,
                          "name": "numberToBet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "3193:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3176:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3176:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3176:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "3176:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 148,
                      "name": "numberOfBets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "3231:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3247:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3231:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "3231:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 152,
                      "name": "totalBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "3256:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 153,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6328,
                        "src": "3268:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3268:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3256:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "3256:21:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 157,
                      "name": "numberOfBets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "3289:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 158,
                      "name": "maxAmountOfBets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "3305:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3289:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 163,
                  "nodeType": "IfStatement",
                  "src": "3286:58:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 160,
                        "name": "generateNumberWinner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "3322:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3322:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 162,
                    "nodeType": "ExpressionStatement",
                    "src": "3322:22:0"
                  }
                }
              ]
            },
            "documentation": "@notice To bet for a number by sending Ether\n @param numberToBet The number that the player wants to bet for. Must be between 1 and 10 both inclusive",
            "id": 165,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "bet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "name": "numberToBet",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "2558:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2558:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2557:18:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2583:0:0"
            },
            "scope": 299,
            "src": "2545:805:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 190,
              "nodeType": "Block",
              "src": "3606:186:0",
              "statements": [
                {
                  "assignments": [
                    171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 171,
                      "name": "numberRandomBytes",
                      "nodeType": "VariableDeclaration",
                      "scope": 191,
                      "src": "3614:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 170,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3614:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 173,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "37",
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3639:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_7_by_1",
                      "typeString": "int_const 7"
                    },
                    "value": "7"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3614:26:0"
                },
                {
                  "assignments": [
                    175
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 175,
                      "name": "delay",
                      "nodeType": "VariableDeclaration",
                      "scope": 191,
                      "src": "3648:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 174,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3648:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 177,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3661:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3648:14:0"
                },
                {
                  "assignments": [
                    179
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 179,
                      "name": "callbackGas",
                      "nodeType": "VariableDeclaration",
                      "scope": 191,
                      "src": "3670:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 178,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3670:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 181,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "323030303030",
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3689:6:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000_by_1",
                      "typeString": "int_const 200000"
                    },
                    "value": "200000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3670:25:0"
                },
                {
                  "assignments": [
                    183
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 183,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 191,
                      "src": "3704:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 182,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3704:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 189,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "delay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 175,
                        "src": "3748:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 186,
                        "name": "numberRandomBytes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "3755:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 187,
                        "name": "callbackGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "3774:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 184,
                      "name": "oraclize_newRandomDSQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5415,
                      "src": "3722:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3722:64:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3704:82:0"
                }
              ]
            },
            "documentation": "@notice Generates a random number between 1 and 10 both inclusive.\n Must be payable because oraclize needs gas to generate a random number.\n Can only be executed when the game ends.",
            "id": 191,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 168,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 167,
                  "name": "onEndGame",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 41,
                  "src": "3596:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3596:9:0"
              }
            ],
            "name": "generateNumberWinner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3585:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3606:0:0"
            },
            "scope": 299,
            "src": "3556:236:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 231,
              "nodeType": "Block",
              "src": "4287:203:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 208,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6328,
                            "src": "4373:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4373:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 210,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4288,
                            "src": "4387:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4387:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4373:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 207,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6317,
                      "src": "4366:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4366:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "4366:42:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 215,
                      "name": "numberWinner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "4417:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 218,
                                      "name": "_result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 195,
                                      "src": "4443:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "id": 217,
                                    "name": "sha3",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6338,
                                    "src": "4438:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                                      "typeString": "function () pure returns (bytes32)"
                                    }
                                  },
                                  "id": 219,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4438:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4433:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint"
                              },
                              "id": 220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4433:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4453:2:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "src": "4433:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4456:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4433:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 225,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4432:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4417:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "4417:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 228,
                      "name": "distributePrizes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "4466:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4466:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "4466:18:0"
                }
              ]
            },
            "documentation": "@notice Callback function that gets called by oraclize when the random number is generated\n @param _queryId The query id that was generated to proofVerify\n @param _result String that contains the number generated\n @param _proof A string with a proof code to verify the authenticity of the number generation",
            "id": 232,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 200,
                    "name": "_queryId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 193,
                    "src": "4250:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 201,
                    "name": "_result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 195,
                    "src": "4260:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 202,
                    "name": "_proof",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 197,
                    "src": "4269:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 203,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 199,
                  "name": "oraclize_randomDS_proofVerify",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5795,
                  "src": "4220:29:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$",
                    "typeString": "modifier (bytes32,string memory,bytes memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4220:56:0"
              },
              {
                "arguments": null,
                "id": 205,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 204,
                  "name": "onEndGame",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 41,
                  "src": "4277:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4277:9:0"
              }
            ],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 193,
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "4156:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4156:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 195,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "4180:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4180:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 197,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "4202:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4202:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4148:71:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4287:0:0"
            },
            "scope": 299,
            "src": "4129:361:0",
            "stateMutability": "nonpayable",
            "superFunction": 1233,
            "visibility": "public"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "4692:531:0",
              "statements": [
                {
                  "assignments": [
                    238
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 238,
                      "name": "winnerEtherAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 298,
                      "src": "4700:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 237,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4700:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 245,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 239,
                      "name": "totalBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "4725:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 240,
                          "name": "numberBetPlayers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "4736:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(uint256 => address[] storage ref)"
                          }
                        },
                        "id": 242,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 241,
                          "name": "numberWinner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "4753:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4736:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 243,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4736:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4725:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4700:73:0"
                },
                {
                  "body": {
                    "id": 268,
                    "nodeType": "Block",
                    "src": "4957:81:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 265,
                              "name": "winnerEtherAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 238,
                              "src": "5011:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 259,
                                  "name": "numberBetPlayers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29,
                                  "src": "4968:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                                    "typeString": "mapping(uint256 => address[] storage ref)"
                                  }
                                },
                                "id": 262,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 260,
                                  "name": "numberWinner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21,
                                  "src": "4985:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4968:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 263,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 261,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 247,
                                "src": "4999:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4968:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4968:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4968:61:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 267,
                        "nodeType": "ExpressionStatement",
                        "src": "4968:61:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 250,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "4910:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 251,
                          "name": "numberBetPlayers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "4914:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(uint256 => address[] storage ref)"
                          }
                        },
                        "id": 253,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 252,
                          "name": "numberWinner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "4931:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4914:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 254,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4914:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4910:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 269,
                  "initializationExpression": {
                    "assignments": [
                      247
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 247,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 298,
                        "src": "4898:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4898:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 249,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4907:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4898:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4953:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 256,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "4953:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 258,
                    "nodeType": "ExpressionStatement",
                    "src": "4953:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "4894:144:0"
                },
                {
                  "body": {
                    "id": 287,
                    "nodeType": "Block",
                    "src": "5123:50:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 280,
                                "name": "numberBetPlayers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29,
                                "src": "5134:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(uint256 => address[] storage ref)"
                                }
                              },
                              "id": 282,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 281,
                                "name": "j",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 271,
                                "src": "5151:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5134:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 283,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5134:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5163:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5134:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 286,
                        "nodeType": "ExpressionStatement",
                        "src": "5134:30:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 274,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "5110:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5115:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "5110:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 288,
                  "initializationExpression": {
                    "assignments": [
                      271
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 271,
                        "name": "j",
                        "nodeType": "VariableDeclaration",
                        "scope": 298,
                        "src": "5098:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 270,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5098:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 273,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5107:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5098:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5119:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 277,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 271,
                        "src": "5119:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 279,
                    "nodeType": "ExpressionStatement",
                    "src": "5119:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5094:79:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 289,
                      "name": "totalBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "5181:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5192:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5181:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "5181:12:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 293,
                      "name": "numberOfBets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "5201:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5216:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5201:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "5201:16:0"
                }
              ]
            },
            "documentation": "@notice Sends the corresponding Ether to each winner then deletes all the\n players for the next game and resets the `totalBet` and `numberOfBets`",
            "id": 298,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 235,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 234,
                  "name": "onEndGame",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 41,
                  "src": "4682:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4682:9:0"
              }
            ],
            "name": "distributePrizes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4679:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4692:0:0"
            },
            "scope": 299,
            "src": "4654:569:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 300,
        "src": "187:5038:0"
      }
    ],
    "src": "0:5226:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-22T03:46:28.550Z"
}